import chalk from "chalk";
import { mind } from "gradient-string";

import { getVersion } from "./version.js";

const d = chalk.dim;

function formatVersionLabel(): string {
  const version = getVersion();
  const normalizedVersion =
    version.startsWith("v") || !/^\d/.test(version) ? version : `v${version}`;
  return `${normalizedVersion} (beta)`;
}

const VERSION_LABEL = formatVersionLabel();

export const CONTINUE_ASCII_ART = `
${mind.multiline(`  ██████╗ ██████╗ ███╗   ██╗████████╗██╗███╗   ██╗██╗   ██╗███████╗
 ██╔════╝██╔═══██╗████╗  ██║╚══██╔══╝██║████╗  ██║██║   ██║██╔════╝
 ██║     ██║   ██║██╔██╗ ██║   ██║   ██║██╔██╗ ██║██║   ██║█████╗
 ██║     ██║   ██║██║╚██╗██║   ██║   ██║██║╚██╗██║██║   ██║██╔══╝
 ╚██████╗╚██████╔╝██║ ╚████║   ██║   ██║██║ ╚████║╚██████╔╝███████╗
  ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝`)}
                                                    ${d(VERSION_LABEL)}`;

// ASCII art for just "CN" (first two letters)
const CN_ASCII_ART = `
${mind.multiline(`  ██████╗███╗   ██╗
 ██╔════╝████╗  ██║
 ██║     ██╔██╗ ██║
 ██║     ██║╚██╗██║
 ╚██████╗██║ ╚████║
  ╚═════╝╚═╝  ╚═══╝`)}
  ${d(VERSION_LABEL)}`;

// Minimum terminal width required to display ASCII art properly
const MIN_WIDTH_FOR_ASCII_ART = 75;

/**
 * Returns the ASCII art only if the terminal is wide enough to display it properly.
 * If terminal is too narrow, returns just the version string.
 */
export function getDisplayableAsciiArt(): string {
  const terminalWidth = process.stdout.columns || 80;

  if (terminalWidth >= MIN_WIDTH_FOR_ASCII_ART) {
    return CONTINUE_ASCII_ART;
  }

  // If terminal is too narrow, show just "CN" ASCII art
  return CN_ASCII_ART;
}

export const CONTINUE_LOGO_ASCII_ART = `
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@
                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@
             @@@@@@@@@@@@                              @@@@@@@@@@@@
            @@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@  @@@@@@@@@@@@
           @@@@@@@@@@@@  @@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@  @@@@@@@@@@@   @
          @@@@@@@@@@@@  @@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@  @@@@@@@@@@@  @@@@
         @@@@@@@@@@@@  @@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@  @@@@@@@@@@@  @@@@@@@
        @@@@@@@@@@@@  @@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@ @@@@@@@@@@@@  @@@@@@@@@
       @@@@@@@@@@@@  @@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@  @@@@@@@@@@@
      @@@@@@@@@@@@  @@@@@@@@@@@                                             @@@@@@@@@@@@
     @@@@@@@@@@@@  @@@@@@@@@@@                                 @@@@@@@@@@@@  @@@@@@@@@@@@
    @@@@@@@@@@@@  @@@@@@@@@@@                                   @@@@@@@@@@@@  @@@@@@@@@@@@
   @@@@@@@@@@@   @@@@@@@@@@@                                     @@@@@@@@@@@@  @@@@@@@@@@@@
  @@@@@@@@@@@  @@@@@@@@@@@@                                       @@@@@@@@@@@@  @@@@@@@@@@@@
 @@@@@@@@@@@  @@@@@@@@@@@@                                         @@@@@@@@@@@@  @@@@@@@@@@@@
@@@@@@@@@@@  @@@@@@@@@@@@                                           @@@@@@@@@@@@  @@@@@@@@@@@@
             @@@@@@@@@@@                                              @@@@@@@@@@@  @@@@@@@@@@@@
@@@@@@@@@@@@  @@@@@@@@@                                                @@@@@@@@@@@  @@@@@@@@@@@@
 @@@@@@@@@@@@  @@@@@@@                                                  @@@@@@@@@@@@ @@@@@@@@@@@@
  @@@@@@@@@@@@  @@@@@                                                    @@@@@@@@@@@@ @@@@@@@@@@@@
    @@@@@@@@@@@  @@@                                                      @@@@@@@@@@@@  @@@@@@@@@@@
     @@@@@@@@@@@                                                           @@@@@@@@@@@@  @@@@@@@@@@@
                                          CONTINUE                                       @@@@@@@@@@@@
     @@@@@@@@@@@                                                           @@@@@@@@@@@@  @@@@@@@@@@@
   @@@@@@@@@@@@  @@@                                                      @@@@@@@@@@@@  @@@@@@@@@@@
  @@@@@@@@@@@@  @@@@@                                                    @@@@@@@@@@@@ @@@@@@@@@@@@
 @@@@@@@@@@@@  @@@@@@@                                                  @@@@@@@@@@@  @@@@@@@@@@@@
@@@@@@@@@@@@  @@@@@@@@@                                                @@@@@@@@@@@  @@@@@@@@@@@@
             @@@@@@@@@@@                                              @@@@@@@@@@@  @@@@@@@@@@@@
@@@@@@@@@@@  @@@@@@@@@@@@                                           @@@@@@@@@@@@  @@@@@@@@@@@@
 @@@@@@@@@@@  @@@@@@@@@@@@                                         @@@@@@@@@@@@  @@@@@@@@@@@@
  @@@@@@@@@@@@ @@@@@@@@@@@@                                       @@@@@@@@@@@@  @@@@@@@@@@@@
   @@@@@@@@@@@   @@@@@@@@@@@                                     @@@@@@@@@@@@  @@@@@@@@@@@@
    @@@@@@@@@@@@  @@@@@@@@@@@                                   @@@@@@@@@@@@  @@@@@@@@@@@@
     @@@@@@@@@@@@  @@@@@@@@@@@                                 @@@@@@@@@@@@  @@@@@@@@@@@@
      @@@@@@@@@@@@  @@@@@@@@@@@@                                            @@@@@@@@@@@@
       @@@@@@@@@@@@  @@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@  @@@@@@@@@@@
        @@@@@@@@@@@@  @@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@ @@@@@@@@@@@@  @@@@@@@@@
         @@@@@@@@@@@@  @@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@  @@@@@@@@@@@  @@@@@@
          @@@@@@@@@@@@  @@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@  @@@@@@@@@@@  @@@@
           @@@@@@@@@@@@  @@  @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@  @@@@@@@@@@@   @
            @@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@  @@@@@@@@@@@
             @@@@@@@@@@@@                              @@@@@@@@@@@@
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@
                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@
                  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`;
